{% set version = "18.1.0" %}

package:
  name: flang-split
  version: {{ version }}

source:
  url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(".rc", "-rc") }}/llvm-project-{{ version.replace(".rc", "rc") }}.src.tar.xz
  sha256: 758a048046ac5024f86c868bb17c631500eed8f8d2677ae6a72ab7ad01602277

build:
  number: 0
  # intentionally only windows (main target) & linux (debuggability)
  skip: true  # [osx]
  track_features:
    - flang

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - ninja
    - sysroot_linux-64 ==2.17  # [linux64]
    - mlir =={{ version }}     # [build_platform != target_platform]
  host:
    - clangdev =={{ version }}
    - compiler-rt =={{ version }}
    - lit =={{ version }}
    - llvm-openmp =={{ version }}
    - llvmdev =={{ version }}
    - mlir =={{ version }}
    - zlib

test:
  commands:
    - flang --version

outputs:
  - name: libflang
    script: install_libflang.sh  # [unix]
    script: install_libflang.bat  # [win]
    requirements:
      build:
        # for strong run-exports
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      host:
        - clangdev =={{ version }}
        - compiler-rt =={{ version }}
        - llvmdev =={{ version }}
        - mlir =={{ version }}
      run:
        # necessary to link on windows (even for static lib), e.g.
        # FortranDecimal.lib(binary-to-decimal.cpp.obj) : error LNK2019: unresolved external symbol __udivti3 ...
        - compiler-rt =={{ version }}  # [win]
    test:
      commands:
        # shared lib on linux
        - test -f $PREFIX/lib/libFortranRuntime.so              # [linux]
        # static lib on win (fails to export symbols for shared build)
        - if not exist %LIBRARY_LIB%\FortranRuntime.lib exit 1  # [win]

  - name: libfortran-main
    script: install_libfortran_main.sh  # [unix]
    script: install_libfortran_main.bat  # [win]
    requirements:
      build:
        # if there's no build env, windows fails with EnvironmentLocationNotFound (what?!)
        - {{ compiler('c') }}    # [win]
        - {{ compiler('cxx') }}  # [win]
      host:
        # this is just here to have a non-empty host environment
        - {{ pin_subpackage('libflang', exact=True) }}
      run:
        # not sure what we need here
    test:
      commands:
        - test -f $PREFIX/lib/libFortran_main.a                 # [unix]
        - if not exist %LIBRARY_LIB%\Fortran_main.lib exit 1    # [win]

  - name: flang
    script: install_flang.sh  # [unix]
    script: install_flang.bat  # [win]
    run_exports:
      strong:
        - libflang >={{ version }}
    requirements:
      build:
        - cmake
        - ninja
        # for strong run-exports
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      host:
        - clangdev =={{ version }}
        - compiler-rt =={{ version }}
        - llvm-openmp =={{ version }}
        - llvmdev =={{ version }}
        - mlir =={{ version }}
        # for required run-exports
        - llvm =={{ version }}
        - libclang-cpp =={{ version }}
        # ninja really wants to find z.lib on win
        - zlib  # [win]
        - {{ pin_subpackage('libflang', exact=True) }}
        - {{ pin_subpackage('libfortran-main', exact=True) }}
      run:
        - sysroot_{{ target_platform }} ==2.17  # [linux]
        - clangdev =={{ version }}
        - llvm-openmp =={{ version }}
        - {{ pin_subpackage('libflang', exact=True) }}
        - {{ pin_subpackage('libfortran-main', exact=True) }}
    test:
      requires:
        - {{ compiler('c') }}       # [win]
        - {{ compiler('cxx') }}     # [win]
      files:
        - hello_world.f90
      commands:
        # see naming discussion: https://discourse.llvm.org/t/reviving-rename-flang-new-to-flang/68130/2
        # - flang hello_world.f90
        - flang-new hello_world.f90
        - ./a.out   # [unix]
        - a.exe     # [win]

  - name: flang_{{ target_platform }}
    run_exports:
      strong:
        - libflang >={{ version }}
    requirements:
      - {{ pin_subpackage('flang', exact=True) }}


about:
  home: https://flang.llvm.org
  license: Apache-2.0
  license_file: flang/LICENSE.TXT
  summary: Flang is a Fortran compiler targeting LLVM.
  dev_url: https://github.com/llvm/llvm-project

extra:
  recipe-maintainers:
    - isuruf
    - h-vetinari
  feedstock-name: flang

{% set version = "19.1.3" %}

package:
  name: flang-split
  version: {{ version }}

source:
  url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-{{ version.replace(".rc", "-rc") }}.tar.gz
  sha256: e5106e2bef341b3f5e41340e4b6c6a58259f4021ad801acf14e88f1a84567b05
  patches:
    # from https://github.com/serge-sans-paille/llvm-project/tree/feature/flang-wasm
    - patches/0001-Instructions-for-building-a-functional-Flang-cross-c.patch
    - patches/0002-Minimal-WASM-support-for-flang.patch
    - patches/0003-Specialize-Flang-to-target-WASM.patch
    # see https://github.com/llvm/llvm-project/pull/99822
    - patches/0004-Flang-Runtime-Explicitly-convert-shift-value-to-Subs.patch
    # see https://github.com/llvm/llvm-project/pull/101242 (plus a necessary precursor)
    - patches/0005-flang-IEEE_NEXT_AFTER-IEEE_NEXT_DOWN-IEEE_NEXT_UP-NE.patch
    - patches/0006-Flang-Runtime-Handle-missing-definitions-in-cfenv.patch
    # hard wasm overrides for building runtime with emcc
    - patches/0007-Patches-to-build-flang-runtime-with-emcc.patch

build:
  number: 0
  # intentionally only windows (main target) & linux (debuggability)
  skip: true  # [osx]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - ninja
    - mlir =={{ version }}     # [build_platform != target_platform]
    # for showing CPU info of CI agent
    - numpy *
  host:
    - clangdev =={{ version }}
    - compiler-rt =={{ version }}
    - lit =={{ version }}
    - llvmdev =={{ version }}
    - mlir =={{ version }}
    - zlib

outputs:
  - name: libflang
    script: install_libflang.sh  # [unix]
    script: install_libflang.bat  # [win]
    requirements:
      build:
        # for strong run-exports
        - {{ compiler('c') }}
        - {{ stdlib('c') }}
        - {{ compiler('cxx') }}
      host:
        - clangdev =={{ version }}
        - compiler-rt =={{ version }}
        - llvmdev =={{ version }}
        - mlir =={{ version }}
    test:
      commands:
        # shared lib on linux
        - test -f $PREFIX/lib/libFortranRuntime.so              # [linux]
        # static lib on win (fails to export symbols for shared build)
        - if not exist %LIBRARY_LIB%\FortranRuntime.lib exit 1  # [win]

  - name: flang
    script: install_flang.sh  # [unix]
    script: install_flang.bat  # [win]
    run_exports:
      strong:
        - libflang >={{ version }}
    requirements:
      build:
        - cmake
        - ninja
        # for strong run-exports
        - {{ compiler('c') }}
        - {{ stdlib('c') }}
        - {{ compiler('cxx') }}
      host:
        - clangdev =={{ version }}
        - compiler-rt =={{ version }}
        - llvmdev =={{ version }}
        - mlir =={{ version }}
        # for required run-exports
        - llvm =={{ version }}
        - libclang-cpp =={{ version }}
        # ninja really wants to find z.lib on win
        - zlib  # [win]
        - zstd  # [win]
        - {{ pin_subpackage('libflang', exact=True) }}
      run:
        - sysroot_{{ target_platform }} >={{ c_stdlib_version }}    # [linux]
        - clang =={{ version }}
        - compiler-rt =={{ version }}   # [win]
        - {{ pin_subpackage('libflang', exact=True) }}
    test:
      commands:
        # see naming discussion: https://discourse.llvm.org/t/reviving-rename-flang-new-to-flang/68130/2
        - test -f $PREFIX/bin/flang-new                     # [linux]
        - if not exist %LIBRARY_BIN%\flang-new.exe exit 1   # [win]

about:
  home: https://flang.llvm.org
  license: Apache-2.0
  license_file: flang/LICENSE.TXT
  summary: Flang is a Fortran compiler targeting LLVM.
  dev_url: https://github.com/llvm/llvm-project

extra:
  recipe-maintainers:
    - isuruf
    - h-vetinari
  feedstock-name: flang
